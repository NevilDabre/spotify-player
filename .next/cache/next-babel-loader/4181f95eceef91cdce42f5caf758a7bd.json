{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nevil\\\\Documents\\\\Study Projects\\\\React\\\\spot-player\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\nconst redirectUri = 'http://localhost:3000';\nconst scopes = ['user-read-currently-playing', 'user-read-playback-state'];\nlet listItems;\n\nfunction Images(props) {\n  console.log(props.imgList);\n  const ImagesList = props.imgList.map(i => __jsx(\"img\", {\n    src: i.url,\n    height: \"80\",\n    width: \"80\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }));\n  return __jsx(React.Fragment, null, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(ImagesList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })));\n}\n\nfunction CompanyIconInHeader() {\n  return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"y\");\n}\n\nconst Index = () => {\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: newReleases,\n    1: setNewReleases\n  } = useState(null);\n  useEffect(() => {\n    // Get the hash of the url\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      //Set token\n      setToken(_token);\n    }\n  });\n\n  const getNowPlaying = () => {\n    spotifyApi.setAccessToken(token);\n    spotifyApi.getNewReleases(function (err, data) {\n      if (err) console.error(err);\n      const items = data.albums.items;\n      setNewReleases(items);\n\n      if (newReleases && newReleases.length > 0) {\n        listItems = newReleases.map((nr, index) => __jsx(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(CompanyIconInHeader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })));\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Hello Spotify!\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, !token && __jsx(\"a\", {\n    href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Login to Spotify\"), token && __jsx(React.Fragment, null, newReleases ? newReleases.map(newRelease => {\n    return __jsx(React.Fragment, null, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, newRelease.name), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Date - \", newRelease.release_date));\n  }) : null, listItems, __jsx(\"button\", {\n    onClick: () => getNowPlaying(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Check Now Playing\"))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Nevil/Documents/Study Projects/React/spot-player/pages/index.js"],"names":["React","Component","useEffect","useState","SpotifyWebApi","spotifyApi","authEndpoint","clientId","redirectUri","scopes","listItems","Images","props","console","log","imgList","ImagesList","map","i","url","CompanyIconInHeader","Index","token","setToken","newReleases","setNewReleases","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","getNowPlaying","setAccessToken","getNewReleases","err","data","error","items","albums","length","nr","index","display","alignItems","justifyContent","flexDirection","join","newRelease","name","release_date"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\nconst clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\r\nconst redirectUri = 'http://localhost:3000';\r\nconst scopes = [\r\n    'user-read-currently-playing',\r\n    'user-read-playback-state'\r\n]\r\n\r\nlet listItems;\r\n\r\nfunction Images(props){\r\n    console.log(props.imgList)\r\n    const ImagesList = props.imgList.map(i=> <img src={i.url} height=\"80\" width=\"80\" />)\r\n    return(\r\n        <>\r\n        <li>\r\n        <ImagesList />\r\n        </li>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nfunction CompanyIconInHeader() {\r\n  return <span>y</span>;\r\n}\r\n\r\nconst Index = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [newReleases, setNewReleases] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // Get the hash of the url\r\n        const hash = window.location.hash\r\n            .substring(1)\r\n            .split(\"&\")\r\n            .reduce(function (initial, item) {\r\n                if (item) {\r\n                    var parts = item.split(\"=\");\r\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\r\n                }\r\n                return initial;\r\n            }, {});\r\n        window.location.hash = \"\";\r\n\r\n        let _token = hash.access_token;\r\n        if (_token) {\r\n            //Set token\r\n            setToken(_token)\r\n        }\r\n    })\r\n\r\n    const getNowPlaying = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.getNewReleases(function (err, data) {\r\n            if (err) console.error(err);\r\n            const items = data.albums.items;\r\n            setNewReleases(items);\r\n            if (newReleases && newReleases.length > 0) {\r\n                listItems = newReleases.map((nr, index) =>\r\n                    <li key={index}>\r\n                        <CompanyIconInHeader />\r\n                    </li>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n            <h1>Hello Spotify!</h1>\r\n            <div>\r\n                {!token &&\r\n                    (<a\r\n                        href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\r\n                    >\r\n                        Login to Spotify\r\n                      </a>)}\r\n                {token &&\r\n                    <>\r\n                        {newReleases ? (\r\n                            newReleases.map(newRelease => {\r\n                                return (<>\r\n\r\n                                    <label>{newRelease.name}</label>\r\n                                    <br />\r\n                                    <label>Date - {newRelease.release_date}</label>\r\n                                </>)\r\n                            })\r\n                        )\r\n                            : null\r\n                        }\r\n                        {listItems}\r\n                        <button onClick={() => getNowPlaying()}>Check Now Playing</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}