{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nevil\\\\Documents\\\\Study Projects\\\\React\\\\spot-player\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\nconst clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\nconst redirectUri = 'http://localhost:3000';\nconst scopes = ['user-read-currently-playing', 'user-read-playback-state'];\n\nconst Index = () => {\n  const {\n    0: token,\n    1: setToken\n  } = useState(null);\n  const {\n    0: newReleases,\n    1: setNewReleases\n  } = useState(null);\n  useEffect(() => {\n    // Get the hash of the url\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    if (_token) {\n      //Set token\n      setToken(_token);\n    }\n  });\n\n  const getNowPlaying = () => {\n    spotifyApi.setAccessToken(token);\n    spotifyApi.getNewReleases(function (err, data) {\n      if (err) console.error(err); //setNewReleases(data);\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Hello Spotify!\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, !token && __jsx(\"a\", {\n    href: `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Login to Spotify\"), token && __jsx(React.Fragment, null, newReleases.map(newRelease => {\n    console.log(newRelease);\n  }), __jsx(\"button\", {\n    onClick: () => getNowPlaying(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Check Now Playing\"))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Nevil/Documents/Study Projects/React/spot-player/pages/index.js"],"names":["React","Component","useEffect","useState","SpotifyWebApi","spotifyApi","authEndpoint","clientId","redirectUri","scopes","Index","token","setToken","newReleases","setNewReleases","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","getNowPlaying","setAccessToken","getNewReleases","err","data","console","error","display","alignItems","justifyContent","flexDirection","join","map","newRelease","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,MAAMC,UAAU,GAAG,IAAID,aAAJ,EAAnB;AAEA,OAAO,MAAME,YAAY,GAAG,wCAArB;AAEP,MAAMC,QAAQ,GAAG,kCAAjB;AACA,MAAMC,WAAW,GAAG,uBAApB;AACA,MAAMC,MAAM,GAAG,CACX,6BADW,EAEX,0BAFW,CAAf;;AAOA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACU,WAAD;AAAA,OAAcC;AAAd,MAAgCX,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMa,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CACRG,SADQ,CACE,CADF,EAERC,KAFQ,CAEF,GAFE,EAGRC,MAHQ,CAGD,UAAUC,OAAV,EAAmBC,IAAnB,EAAyB;AAC7B,UAAIA,IAAJ,EAAU;AACN,YAAIC,KAAK,GAAGD,IAAI,CAACH,KAAL,CAAW,GAAX,CAAZ;AACAE,QAAAA,OAAO,CAACE,KAAK,CAAC,CAAD,CAAN,CAAP,GAAoBC,kBAAkB,CAACD,KAAK,CAAC,CAAD,CAAN,CAAtC;AACH;;AACD,aAAOF,OAAP;AACH,KATQ,EASN,EATM,CAAb;AAUAL,IAAAA,MAAM,CAACC,QAAP,CAAgBF,IAAhB,GAAuB,EAAvB;AAEA,QAAIU,MAAM,GAAGV,IAAI,CAACW,YAAlB;;AACA,QAAID,MAAJ,EAAY;AACR;AACAb,MAAAA,QAAQ,CAACa,MAAD,CAAR;AACH;AACJ,GAnBQ,CAAT;;AAqBA,QAAME,aAAa,GAAG,MAAM;AACxBtB,IAAAA,UAAU,CAACuB,cAAX,CAA0BjB,KAA1B;AACAN,IAAAA,UAAU,CAACwB,cAAX,CAA0B,UAASC,GAAT,EAAcC,IAAd,EAAoB;AAC1C,UAAID,GAAJ,EAASE,OAAO,CAACC,KAAR,CAAcH,GAAd,EADiC,CAG1C;AACD,KAJH;AAKH,GAPD;;AASA,SACI;AAAK,IAAA,KAAK,EAAE;AAAEI,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,UAAU,EAAE,QAA/B;AAAyCC,MAAAA,cAAc,EAAE,QAAzD;AAAmEC,MAAAA,aAAa,EAAE;AAAlF,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC1B,KAAD,IACI;AACG,IAAA,IAAI,EAAG,GAAEL,YAAa,cAAaC,QAAS,iBAAgBC,WAAY,UAASC,MAAM,CAAC6B,IAAP,CAAY,KAAZ,CAAmB,uCADvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFT,EAOK3B,KAAK,IACF,4BAEAE,WAAW,CAAC0B,GAAZ,CAAgBC,UAAU,IAAE;AACxBR,IAAAA,OAAO,CAACS,GAAR,CAAYD,UAAZ;AACH,GAFD,CAFA,EAMI;AAAQ,IAAA,OAAO,EAAE,MAAMb,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,CARR,CAFJ,CADJ;AAuBH,CAzDD;;AA2DA,eAAejB,KAAf","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\nconst clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\r\nconst redirectUri = 'http://localhost:3000';\r\nconst scopes = [\r\n    'user-read-currently-playing',\r\n    'user-read-playback-state'\r\n]\r\n\r\n\r\n\r\nconst Index = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [newReleases, setNewReleases] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // Get the hash of the url\r\n        const hash = window.location.hash\r\n            .substring(1)\r\n            .split(\"&\")\r\n            .reduce(function (initial, item) {\r\n                if (item) {\r\n                    var parts = item.split(\"=\");\r\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\r\n                }\r\n                return initial;\r\n            }, {});\r\n        window.location.hash = \"\";\r\n\r\n        let _token = hash.access_token;\r\n        if (_token) {\r\n            //Set token\r\n            setToken(_token)\r\n        }\r\n    })\r\n\r\n    const getNowPlaying = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.getNewReleases(function(err, data) {\r\n            if (err) console.error(err);\r\n\r\n            //setNewReleases(data);\r\n          });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n            <h1>Hello Spotify!</h1>\r\n            <div>\r\n                {!token &&\r\n                    (<a\r\n                        href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\r\n                    >\r\n                        Login to Spotify\r\n                      </a>)}\r\n                {token &&\r\n                    <>\r\n                    {\r\n                    newReleases.map(newRelease=>{\r\n                        console.log(newRelease)\r\n                    })\r\n                }\r\n                        <button onClick={() => getNowPlaying()}>Check Now Playing</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}