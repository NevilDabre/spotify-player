{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nevil\\\\Documents\\\\Study Projects\\\\React\\\\spot-player\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { Component, useEffect, useState } from 'react';\nimport SpotifyWebApi from 'spotify-web-api-js';\nvar spotifyApi = new SpotifyWebApi();\nexport var authEndpoint = 'https://accounts.spotify.com/authorize';\nvar clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\nvar redirectUri = 'http://localhost:3000';\nvar scopes = ['user-read-currently-playing', 'user-read-playback-state'];\nvar listItems;\n\nvar Index = function Index() {\n  var _useState = useState(null),\n      token = _useState[0],\n      setToken = _useState[1];\n\n  var _useState2 = useState(null),\n      newReleases = _useState2[0],\n      setNewReleases = _useState2[1];\n\n  useEffect(function () {\n    // Get the hash of the url\n    var hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    var _token = hash.access_token;\n\n    if (_token) {\n      //Set token\n      setToken(_token);\n    }\n  });\n\n  var getNowPlaying = function getNowPlaying() {\n    spotifyApi.setAccessToken(token);\n    spotifyApi.getNewReleases(function (err, data) {\n      if (err) console.error(err);\n      var items = data.albums.items;\n      setNewReleases(items);\n\n      if (newReleases && newReleases.length > 0) {\n        listItems = newReleases.map(function (nr, index) {\n          return __jsx(\"li\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, nr.name, console.log(nr.images) && nr.images.map(function (img) {\n            console.log(img.url);\n            return __jsx(React.Fragment, null, __jsx(\"img\", {\n              height: \"120\",\n              width: \"120\",\n              src: img.url,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }), __jsx(\"br\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56\n              },\n              __self: this\n            }));\n          }));\n        });\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Hello Spotify!\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, !token && __jsx(\"a\", {\n    href: \"\".concat(authEndpoint, \"?client_id=\").concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&scope=\").concat(scopes.join(\"%20\"), \"&response_type=token&show_dialog=true\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Login to Spotify\"), token && __jsx(React.Fragment, null, newReleases ? newReleases.map(function (newRelease) {\n    return __jsx(React.Fragment, null, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, newRelease.name), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Date - \", newRelease.release_date), newRelease.images.map(function (img) {\n      __jsx(React.Fragment, null, __jsx(\"img\", {\n        height: \"120\",\n        width: \"120\",\n        src: img.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }));\n  }) : null, listItems, __jsx(\"button\", {\n    onClick: function onClick() {\n      return getNowPlaying();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Check Now Playing\"))));\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/Nevil/Documents/Study Projects/React/spot-player/pages/index.js"],"names":["React","Component","useEffect","useState","SpotifyWebApi","spotifyApi","authEndpoint","clientId","redirectUri","scopes","listItems","Index","token","setToken","newReleases","setNewReleases","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","_token","access_token","getNowPlaying","setAccessToken","getNewReleases","err","data","console","error","items","albums","length","map","nr","index","name","log","images","img","url","display","alignItems","justifyContent","flexDirection","join","newRelease","release_date"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport SpotifyWebApi from 'spotify-web-api-js'\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\nconst clientId = 'bc49f02eb2ed4712ae02fd6c17d41f5c';\r\nconst redirectUri = 'http://localhost:3000';\r\nconst scopes = [\r\n    'user-read-currently-playing',\r\n    'user-read-playback-state'\r\n]\r\n\r\nlet listItems;\r\n\r\nconst Index = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [newReleases, setNewReleases] = useState(null)\r\n\r\n    useEffect(() => {\r\n        // Get the hash of the url\r\n        const hash = window.location.hash\r\n            .substring(1)\r\n            .split(\"&\")\r\n            .reduce(function (initial, item) {\r\n                if (item) {\r\n                    var parts = item.split(\"=\");\r\n                    initial[parts[0]] = decodeURIComponent(parts[1]);\r\n                }\r\n                return initial;\r\n            }, {});\r\n        window.location.hash = \"\";\r\n\r\n        let _token = hash.access_token;\r\n        if (_token) {\r\n            //Set token\r\n            setToken(_token)\r\n        }\r\n    })\r\n\r\n    const getNowPlaying = () => {\r\n        spotifyApi.setAccessToken(token);\r\n        spotifyApi.getNewReleases(function (err, data) {\r\n            if (err) console.error(err);\r\n            const items = data.albums.items;\r\n            setNewReleases(items);\r\n            if (newReleases && newReleases.length > 0) {\r\n                listItems = newReleases.map((nr, index) =>\r\n                    <li key={index}>\r\n                        {nr.name}\r\n                        {\r\n                            console.log(nr.images) &&\r\n                                     nr.images.map(img => {\r\n                                        console.log(img.url)\r\n                                            return (<>\r\n                                                <img height=\"120\" width=\"120\" src={img.url} /><br />\r\n                                            </>)\r\n                                        })\r\n                                    }\r\n                    </li>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n            <h1>Hello Spotify!</h1>\r\n            <div>\r\n                {!token &&\r\n                    (<a\r\n                        href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`}\r\n                    >\r\n                        Login to Spotify\r\n                      </a>)}\r\n                {token &&\r\n                    <>\r\n                        {newReleases ? (\r\n                            newReleases.map(newRelease => {\r\n                                return (<>\r\n\r\n                                    <label>{newRelease.name}</label>\r\n                                    <label>Date - {newRelease.release_date}</label>\r\n                                    {\r\n                                        newRelease.images.map(img => {\r\n                                            <>\r\n                                                <img height=\"120\" width=\"120\" src={img.url} /><br />\r\n                                            </>\r\n                                        })\r\n                                    }\r\n                                </>)\r\n                            })\r\n                        )\r\n                            : null\r\n                        }\r\n                        {listItems}\r\n                        <button onClick={() => getNowPlaying()}>Check Now Playing</button>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}